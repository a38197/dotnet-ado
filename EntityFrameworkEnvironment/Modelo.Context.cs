//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BidSoftware.EntityFrameworkEnvironment
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SI2_Entities : DbContext
    {
        public SI2_Entities()
            : base("name=SI2_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AuctionSale> AuctionSales { get; set; }
        public virtual DbSet<Bid> Bids { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<ItemCondition> ItemConditions { get; set; }
        public virtual DbSet<PostalValue> PostalValues { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserAddressHistory> UserAddressHistories { get; set; }
        public virtual DbSet<V_AuctionNotCompleted> V_AuctionNotCompleted { get; set; }
        public virtual DbSet<V_RakedBids> V_RakedBids { get; set; }
        public virtual DbSet<vAuction> vAuctions { get; set; }
        public virtual DbSet<vItem> vItems { get; set; }
        public virtual DbSet<vSale> vSales { get; set; }
        public virtual DbSet<vUser> vUsers { get; set; }
        public virtual DbSet<V_ActiveAuctions> V_ActiveAuctions { get; set; }
        public virtual DbSet<vBid> vBids { get; set; }
    
        [DbFunction("SI2_Entities", "getNLastBids")]
        public virtual IQueryable<getNLastBids_Result> getNLastBids(Nullable<int> nBids, Nullable<int> saleId)
        {
            var nBidsParameter = nBids.HasValue ?
                new ObjectParameter("nBids", nBids) :
                new ObjectParameter("nBids", typeof(int));
    
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getNLastBids_Result>("[SI2_Entities].[getNLastBids](@nBids, @saleId)", nBidsParameter, saleIdParameter);
        }
    
        public virtual int sp_addAuctionSale(Nullable<int> itemId, Nullable<decimal> value, Nullable<System.DateTime> start, Nullable<System.DateTime> end, string location, Nullable<int> country, Nullable<decimal> minIncre)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(int));
    
            var minIncreParameter = minIncre.HasValue ?
                new ObjectParameter("minIncre", minIncre) :
                new ObjectParameter("minIncre", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addAuctionSale", itemIdParameter, valueParameter, startParameter, endParameter, locationParameter, countryParameter, minIncreParameter);
        }
    
        public virtual int sp_addBid(Nullable<int> saleId, string buyerEmail, Nullable<decimal> value)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            var buyerEmailParameter = buyerEmail != null ?
                new ObjectParameter("buyerEmail", buyerEmail) :
                new ObjectParameter("buyerEmail", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addBid", saleIdParameter, buyerEmailParameter, valueParameter);
        }
    
        public virtual int sp_addCountry(Nullable<int> numCode, string alpha2, string alpha3, string desc)
        {
            var numCodeParameter = numCode.HasValue ?
                new ObjectParameter("numCode", numCode) :
                new ObjectParameter("numCode", typeof(int));
    
            var alpha2Parameter = alpha2 != null ?
                new ObjectParameter("alpha2", alpha2) :
                new ObjectParameter("alpha2", typeof(string));
    
            var alpha3Parameter = alpha3 != null ?
                new ObjectParameter("alpha3", alpha3) :
                new ObjectParameter("alpha3", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addCountry", numCodeParameter, alpha2Parameter, alpha3Parameter, descParameter);
        }
    
        public virtual int sp_addItem(string desc, Nullable<int> condition, string email)
        {
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var conditionParameter = condition.HasValue ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addItem", descParameter, conditionParameter, emailParameter);
        }
    
        public virtual int sp_addPostalValue(Nullable<int> numCodeSource, Nullable<int> numCodeDest, Nullable<decimal> value)
        {
            var numCodeSourceParameter = numCodeSource.HasValue ?
                new ObjectParameter("numCodeSource", numCodeSource) :
                new ObjectParameter("numCodeSource", typeof(int));
    
            var numCodeDestParameter = numCodeDest.HasValue ?
                new ObjectParameter("numCodeDest", numCodeDest) :
                new ObjectParameter("numCodeDest", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addPostalValue", numCodeSourceParameter, numCodeDestParameter, valueParameter);
        }
    
        public virtual int sp_addSale(Nullable<int> itemId, Nullable<decimal> value, Nullable<System.DateTime> start, Nullable<System.DateTime> end, string location, Nullable<int> country)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addSale", itemIdParameter, valueParameter, startParameter, endParameter, locationParameter, countryParameter);
        }
    
        public virtual int sp_addUser(string email, string name, string address, string password, Nullable<int> country)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addUser", emailParameter, nameParameter, addressParameter, passwordParameter, countryParameter);
        }
    
        public virtual int sp_closeSale(Nullable<int> saleId, Nullable<decimal> creditCard, string addressToShip, Nullable<int> countryToShip, string buyerEmail)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            var creditCardParameter = creditCard.HasValue ?
                new ObjectParameter("creditCard", creditCard) :
                new ObjectParameter("creditCard", typeof(decimal));
    
            var addressToShipParameter = addressToShip != null ?
                new ObjectParameter("addressToShip", addressToShip) :
                new ObjectParameter("addressToShip", typeof(string));
    
            var countryToShipParameter = countryToShip.HasValue ?
                new ObjectParameter("CountryToShip", countryToShip) :
                new ObjectParameter("CountryToShip", typeof(int));
    
            var buyerEmailParameter = buyerEmail != null ?
                new ObjectParameter("buyerEmail", buyerEmail) :
                new ObjectParameter("buyerEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_closeSale", saleIdParameter, creditCardParameter, addressToShipParameter, countryToShipParameter, buyerEmailParameter);
        }
    
        public virtual int sp_deleteAuctionSale(Nullable<int> saleId)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteAuctionSale", saleIdParameter);
        }
    
        public virtual int sp_deleteBid(Nullable<int> saleId, string userMail)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            var userMailParameter = userMail != null ?
                new ObjectParameter("userMail", userMail) :
                new ObjectParameter("userMail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteBid", saleIdParameter, userMailParameter);
        }
    
        public virtual int sp_deleteCountry(Nullable<int> numCode)
        {
            var numCodeParameter = numCode.HasValue ?
                new ObjectParameter("numCode", numCode) :
                new ObjectParameter("numCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteCountry", numCodeParameter);
        }
    
        public virtual int sp_deleteItem(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteItem", idParameter);
        }
    
        public virtual int sp_deletePostalValue(Nullable<int> numCodeSource, Nullable<int> numCodeDest, Nullable<decimal> value)
        {
            var numCodeSourceParameter = numCodeSource.HasValue ?
                new ObjectParameter("numCodeSource", numCodeSource) :
                new ObjectParameter("numCodeSource", typeof(int));
    
            var numCodeDestParameter = numCodeDest.HasValue ?
                new ObjectParameter("numCodeDest", numCodeDest) :
                new ObjectParameter("numCodeDest", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletePostalValue", numCodeSourceParameter, numCodeDestParameter, valueParameter);
        }
    
        public virtual int sp_deleteSale(Nullable<int> saleId)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteSale", saleIdParameter);
        }
    
        public virtual int sp_deleteUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteUser", emailParameter);
        }
    
        public virtual int sp_editAuctionSale(Nullable<int> saleId, Nullable<decimal> value, Nullable<System.DateTime> start, Nullable<System.DateTime> end, string location, Nullable<decimal> minIncre, Nullable<int> itemId, Nullable<int> country)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("SaleId", saleId) :
                new ObjectParameter("SaleId", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var minIncreParameter = minIncre.HasValue ?
                new ObjectParameter("minIncre", minIncre) :
                new ObjectParameter("minIncre", typeof(decimal));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editAuctionSale", saleIdParameter, valueParameter, startParameter, endParameter, locationParameter, minIncreParameter, itemIdParameter, countryParameter);
        }
    
        public virtual int sp_editCountry(Nullable<int> numCode, string alpha2, string alpha3, string desc)
        {
            var numCodeParameter = numCode.HasValue ?
                new ObjectParameter("numCode", numCode) :
                new ObjectParameter("numCode", typeof(int));
    
            var alpha2Parameter = alpha2 != null ?
                new ObjectParameter("alpha2", alpha2) :
                new ObjectParameter("alpha2", typeof(string));
    
            var alpha3Parameter = alpha3 != null ?
                new ObjectParameter("alpha3", alpha3) :
                new ObjectParameter("alpha3", typeof(string));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editCountry", numCodeParameter, alpha2Parameter, alpha3Parameter, descParameter);
        }
    
        public virtual int sp_editItem(Nullable<int> id, string desc, Nullable<int> condition, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var descParameter = desc != null ?
                new ObjectParameter("desc", desc) :
                new ObjectParameter("desc", typeof(string));
    
            var conditionParameter = condition.HasValue ?
                new ObjectParameter("condition", condition) :
                new ObjectParameter("condition", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editItem", idParameter, descParameter, conditionParameter, emailParameter);
        }
    
        public virtual int sp_editPostalValue(Nullable<int> numCodeSource, Nullable<int> numCodeDest, Nullable<decimal> value)
        {
            var numCodeSourceParameter = numCodeSource.HasValue ?
                new ObjectParameter("numCodeSource", numCodeSource) :
                new ObjectParameter("numCodeSource", typeof(int));
    
            var numCodeDestParameter = numCodeDest.HasValue ?
                new ObjectParameter("numCodeDest", numCodeDest) :
                new ObjectParameter("numCodeDest", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editPostalValue", numCodeSourceParameter, numCodeDestParameter, valueParameter);
        }
    
        public virtual int sp_editSale(Nullable<int> saleId, Nullable<decimal> value, Nullable<System.DateTime> start, Nullable<System.DateTime> end, string location, Nullable<int> country, Nullable<int> itemId)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("SaleId", saleId) :
                new ObjectParameter("SaleId", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(int));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editSale", saleIdParameter, valueParameter, startParameter, endParameter, locationParameter, countryParameter, itemIdParameter);
        }
    
        public virtual int sp_editUser(string email, string name, string address, string password, Nullable<int> country)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_editUser", emailParameter, nameParameter, addressParameter, passwordParameter, countryParameter);
        }
    
        public virtual int sp_validateUser(string email, string password, ObjectParameter result)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_validateUser", emailParameter, passwordParameter, result);
        }
    }
}
